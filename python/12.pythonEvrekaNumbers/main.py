# –ß–∏—Å–ª–æ 89 89 —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, —Å–æ—Å—Ç–æ—è—â–µ–µ –±–æ–ª–µ–µ —á–µ–º –∏–∑ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã, –∫–æ—Ç–æ—Ä–æ–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —Å–≤–æ–π—Å—Ç–≤—É,
# —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º—É
# –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ –∫–∞—Ç–∞. –ö–∞–∫–æ–π —Å–º—ã—Å–ª –≥–æ–≤–æ—Ä–∏—Ç—å "–≠–≤—Ä–∏–∫–∞"?
# –ü–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–∞ —Å—É–º–º–∞ –¥–∞–µ—Ç –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —á–∏—Å–ª–æ: 89 = 8 1 + 9 2 89=8 1 +9 2
# –°–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ, –æ–±–ª–∞–¥–∞—é—â–µ–µ —ç—Ç–∏–º —Å–≤–æ–π—Å—Ç–≤–æ–º, —è–≤–ª—è–µ—Ç—Å—è 135 135:
# –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –µ—â–µ —Ä–∞–∑: 135 = 1 1 + 3 2 + 5 3 135=1 1 +3 2 +5 3


# –ó–∞–¥–∞–Ω–∏–µ –ù–∞–º –Ω—É–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∞ —ç—Ç–∏—Ö —á–∏—Å–µ–ª, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ ùëé a, ùëè
# b —ç—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω [ ùëé , ùëè ] [a,b] (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ,
# –∫–æ—Ç–æ—Ä—ã–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –æ–ø–∏—Å–∞–Ω–Ω–æ–º—É –≤—ã—à–µ —Å–≤–æ–π—Å—Ç–≤—É.


def sum_dig_pow(a, b):  # range(a, b + 1) will be studied by the function
    list_sum_number = []
    for i in range(a, b + 1):
        str_number = str(i)
        sum_number = 0
        for number in range(len(str_number)):
            sum_number += (int(str_number[number]) ** (number + 1))
        if sum_number == i:
            list_sum_number.append(i)
    return list_sum_number


# print(sum_dig_pow(89, 90))

print(sum_dig_pow(1, 10), [1, 2, 3, 4, 5, 6, 7, 8, 9])
print(sum_dig_pow(1, 100), [1, 2, 3, 4, 5, 6, 7, 8, 9, 89])
print(sum_dig_pow(10, 89), [89])
print(sum_dig_pow(10, 100), [89])
print(sum_dig_pow(89, 135), [89, 135])

# –∫–æ–¥ —Å codewars
# def sum_dig_pow(a, b):
#     return [x for x in range(a, b+1) if sum(int(d)**i for i, d in enumerate(str(x), 1)) == x]